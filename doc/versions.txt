CalcAl - versions summary
==========================

CalcAl_v0.36g : 12/11/2016 : Refactoring
- 6046 lines py code (include 1055 lines pytest)
- Model package to host diet modules
- Introduce Design Pattern : Publish–subscribe pattern 
- Unit testing : unittest.sh + unittest
- Add sugar and total energy in energy table
- Better control of Selection Menu : Disable if no food in table

CalcAl_v0.35 : 14/10/2016 : Packaging Mac
- 4404 lines py code
- new doc file : packaging.txt
- import path to package inside gui and database with relative path.
- __init__.py in package dir gui and database
- remove directorysrc and move its entries to project base dir
- Test in Calcal.py if Calcal.ini file is availaible
- Calcal.py : configApp.read(fileConfigApp, encoding="utf-8") add encoding else crash of app
- CalcAlGUIMenu/installReader() : bug : add self.configApp.get("Resources", "ReadersDir")
- Calcal.py/setLocaleCalcal() new function to solve locale setting problems in bundle app
- Impossible to run plugin import for readers in a Mac app.
    Solution :
    Deliver to users versions with or without plugins by adding or deleting pllugin
    in database directory before packaging Mac app.
- Speed up portion insertion in calculator frame by adding group of aliments in tables,
	add functions : CalculatorFrame.py/addFoodGroupInTable() and
	TableTreeView.py/insertGroupRow()

CalcAl_v0.34 : 2/10/2016 : Don't write in project directory
- 4310 lines py code
- Don't write in project directory but in user's home dir for :
    - Log messages,
    - databases.
- Avoid code replication between : Database/formatListComponentsValues() and
    Database/formatListQualifiersValues()
- Avoid portability problem : remove a / in key CalcAl.ini/Resources/ReadersDir
    Create key CalcAl.ini/Resources/SourceDir

CalcAl_v0.33 : 30/9/2016 : speed up
- 4281 lines py code
- StartFrame frame :
    bind return keys on database list
    failed to bind doubleclic on database list
- Calculator frame : speed up insertion of a foodstufff in main table food
    Problem : addTotalRow() exttracts all values for each componant of each foodstuf
              again from database to be summed.
    Solution : Sum values from displayed table and not from database
        TableTreeView : add method getAllColumnsValues()
        Database :  add methods formatListQualifiersValues

CalcAl_v0.32 : 28/9/2016 : Portion management
- 4223 lines py code
- Portion management
- User table are now not created by readers,
	but cheched is done each time a database is opened.
	and created in Database/createUserTables()
- Language detection and translation :
    Hack on Windows : ref : http://python.zirael.org/e-localization4.html
    For gettext.install to detect User language
- Plugin installation modified in CalcAlGUIMenu.py
- add more advice on tables Tooltip : Ctrl-c

CalcAl_v0.31 : 18/9/2016 : Thread when search food
- 3659 lines py code
- SearchFoodFrame : use thread when searching in database to avoid GUI blocking
- CalcAlGUIMenu : Add in menu selection of erase item
- USDA_28_Reader : Capitalize family and product name
- Change icon for erase line in food calculator : eraseselection.gif

CalcAl_v0.30 : 27/8/2016 :
- 3436 lines py code
- DatabaseManager class to manage database operations for CalcAl software
- Info button on database
- Solve problem vO.29 : groups and usda products codes are in the same range >= 1000000
    minCompositionProductCode -> startGroupProductCodes
    all users codes are now negatives : groups codes start below 0
    modif CalcAl.ini and Database.py
- Solve old ungrouping problem :
    When ungrouping and one or more members of the group already present in the list,
    the quantity of this previous element is replace instead of added with ungrouped parts
- Info button for food in CalculatorFrame
- Change field name productCodeCiqual -> productCodePart in compositionProducts table
    + productCodeUSDA -> productCodePart
- Suppress double quotes in familyName when importing Ciqual database
- Bouton to delete user elements in CalculatorFrame : group
- Correction Language detection problems in CalcAl.py
- Translation of shortcut table in english : locale/en/componants_shortcuts.txt
- Message in SearchFrame while searching in database.
    But the message don't appear ??? Search block GUI process
- Join button added : products and constituants values and names 
    from 2 databases are merged but user groups are ignored

CalcAl_v0.29 : 30/7/2016 : USDA_28_Reader
- 2974 lines py code
- Add USDA_28_Reader.py to read USDA abreviated database
- Add file usda_constituants.txt to match Ciqual constituants name

CalcAl_v0.28 : 28/7/2016 : unknown constituants
- 2732 lines py code
- Empty value (-) for unknown constituants are not recorded in databases
- Results of getComponentsValuesRaw4Food() are now sorted by its parameter
    listComponentsCodes order
- SearchFoodFrame : constituants are displayed according filters order
- SearchFoodFrame/search() : Déplacement génération code SQL de condition de recherche
    dans module Database Database/getProductComponents4Filters

CalcAl_v0.27 : 11/7/2016 : Reader plugins
- 2692 lines py code
- Simplify constructors parameter by passing dirProject
- Database reader as plugins : message to contact support if missing
- Add support Emails in About box
- Read .csv or .csv.zip file for ciqual database
- Copy database provider URL in clipboard in DatabaseInitialiser.py
- Install a Ciqual Reader plugin present on the computer

CalcAl_v0.26 : 24/6/2016 :
- 2627 lines py code
- Database is choosen with a file chooser : class DatabaseInitialiser.py
- Correction of bug if change database : init pane calculator
- Suppress btn search by component in pane calculator
- Ciqual init file out of sources
- Demo.db database with only "Aliments moyens"
- prevent to delete Demo.db database

CalcAl_v0.25 : 18/6/2016 :
- 2563 lines py code
- Bypass for python error message when start button icon is disabled
- Module database : implement design pattern factory to structure this module
- New class : DatabaseReaderFactory.py + CiqualReader.py

CalcAl_v0.24 : 3/6/2016 :
- 2463 lines py code
- Solve pb of décimal séparateur when copying in clipboard.
    Use locale.localeconv()['decimal_point'] in TableTreeView.py
    to know local usage for this system.
- In search frame, display first results when too many ar found.
- Correct bug CalculatorFrame/Energy %  when food gives no energy (water)
- Dialog box when creating a group.
- CalculatorFrame : Put a food in table when hitting return in quantity
- set binding Ctrl-C, Command-C and double clic for food tables in
    CalculatorFrame and SearchFrame
- set binding Ctrl-C, Command-C for energy table to copy values in clipboard

CalcAl_v0.23 : 29/5/2016 :
- Compulsory mention of Ciqual in Start Frame and About box
- Add database menu
- In startframe, list of database showing 4 element and a scrollbar added.
- Correct bug in search frame for the order of components titles diferent from
    order of values.
- Icon for start button

CalcAl_v0.22 : 22/5/2016 :
- 2179 lines py code
- Allow . ou , as decimal separator for quantity.
- TableTreeView : Correct change2Numeric() when value contains "< "
- SearchFoodFrame :
    - Display foods and components with TreeView widget for search results
    - Erase filter line if operator is erased.
    - improve look of the frame
- Copy to clipboard for table content.

CalcAl_v0.21 : 21/5/2016 :
- 2054 lines py code
- Tables headers are actives
	- for values header, sort columns by values ascending or descending order
	- for key header, select or deselect al rows
- All Components values are qualified : Number, Traces, -, < Number
    Sums are made according rules in config file to maintain values qualification.

CalcAl_v0.20 : 15/5/2016 :
- 1927 lines py code
- Tables implemented with Tkinter TreeView widget
- Better windows layout and resizing
- Reduce number code lines of 300 lines for same functionalities

CalcAl_v0.19 : 7/5/2016 :
- 2212 lines py code
- Tables implemented with grid layout
- Test on touchable Windows 8 PC and Mac with small screen
	
